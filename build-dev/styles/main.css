/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

@font-face {
  font-family: "Raleway";
  src: url("../assets/fonts/Raleway/Raleway-Regular.woff2") format("woff2");
  font-display: swap;
  font-style: normal;
  font-weight: 400;
}

@font-face {
  font-family: "Raleway";
  src: url("../assets/fonts/Raleway/Raleway-Medium.woff2") format("woff2");
  font-display: swap;
  font-style: normal;
  font-weight: 500;
}

@font-face {
  font-family: "Raleway";
  src: url("../assets/fonts/Raleway/Raleway-SemiBold.woff2") format("woff2");
  font-display: swap;
  font-style: normal;
  font-weight: 600;
}

@font-face {
  font-family: "Raleway";
  src: url("../assets/fonts/Raleway/Raleway-Bold.woff2") format("woff2");
  font-display: swap;
  font-style: normal;
  font-weight: 700;
}

.splide__container {
  box-sizing: border-box;
  position: relative;
}

.splide__list {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: flex;
  height: 100%;
  margin: 0 !important;
  padding: 0 !important;
  transform-style: preserve-3d;
}

.splide.is-initialized:not(.is-active) .splide__list {
  display: block;
}

.splide__pagination {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 0;
  pointer-events: none;
}

.splide__pagination li {
  display: inline-block;
  line-height: 1;
  list-style-type: none;
  margin: 0;
  pointer-events: auto;
}

.splide__progress__bar {
  width: 0;
}

.splide {
  outline: none;
  position: relative;
  visibility: hidden;
}

.splide.is-initialized,
.splide.is-rendered {
  visibility: visible;
}

.splide__slide {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  box-sizing: border-box;
  flex-shrink: 0;
  list-style-type: none !important;
  margin: 0;
  outline: none;
  position: relative;
}

.splide__slide img {
  vertical-align: bottom;
}

.splide__slider {
  position: relative;
}

.splide__spinner {
  -webkit-animation: splide-loading 1s linear infinite;
  animation: splide-loading 1s linear infinite;
  border: 2px solid #999;
  border-left-color: transparent;
  border-radius: 50%;
  bottom: 0;
  display: inline-block;
  height: 20px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 20px;
}

.splide__track {
  overflow: hidden;
  position: relative;
  z-index: 0;
}

@-webkit-keyframes splide-loading {
  0% {
    transform: rotate(0);
  }

  to {
    transform: rotate(1turn);
  }
}

@keyframes splide-loading {
  0% {
    transform: rotate(0);
  }

  to {
    transform: rotate(1turn);
  }
}

.splide--draggable > .splide__slider > .splide__track,
.splide--draggable > .splide__track {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.splide--fade > .splide__slider > .splide__track > .splide__list,
.splide--fade > .splide__track > .splide__list {
  display: block;
}

.splide--fade > .splide__slider > .splide__track > .splide__list > .splide__slide,
.splide--fade > .splide__track > .splide__list > .splide__slide {
  left: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  z-index: 0;
}

.splide--fade > .splide__slider > .splide__track > .splide__list > .splide__slide.is-active,
.splide--fade > .splide__track > .splide__list > .splide__slide.is-active {
  opacity: 1;
  position: relative;
  z-index: 1;
}

.splide--rtl {
  direction: rtl;
}

.splide--ttb.is-active > .splide__slider > .splide__track > .splide__list,
.splide--ttb.is-active > .splide__track > .splide__list {
  display: block;
}

.splide__arrow {
  align-items: center;
  background: #ccc;
  border: 0;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  height: 2em;
  justify-content: center;
  opacity: .7;
  padding: 0;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 2em;
  z-index: 1;
}

.splide__arrow svg {
  fill: #000;
  height: 1.2em;
  width: 1.2em;
}

.splide__arrow:hover {
  opacity: .9;
}

.splide__arrow:focus {
  outline: none;
}

.splide__arrow--prev {
  left: 1em;
}

.splide__arrow--prev svg {
  transform: scaleX(-1);
}

.splide__arrow--next {
  right: 1em;
}

.splide__pagination {
  bottom: .5em;
  left: 0;
  padding: 0 1em;
  position: absolute;
  right: 0;
  z-index: 1;
}

.splide__pagination__page {
  background: #ccc;
  border: 0;
  border-radius: 50%;
  display: inline-block;
  height: 8px;
  margin: 3px;
  opacity: .7;
  padding: 0;
  transition: transform .2s linear;
  width: 8px;
}

.splide__pagination__page.is-active {
  background: #fff;
  transform: scale(1.4);
}

.splide__pagination__page:hover {
  cursor: pointer;
  opacity: .9;
}

.splide__pagination__page:focus {
  outline: none;
}

.splide__progress__bar {
  background: #ccc;
  height: 3px;
}

.splide--nav > .splide__slider > .splide__track > .splide__list > .splide__slide,
.splide--nav > .splide__track > .splide__list > .splide__slide {
  border: 3px solid transparent;
  cursor: pointer;
}

.splide--nav > .splide__slider > .splide__track > .splide__list > .splide__slide.is-active,
.splide--nav > .splide__track > .splide__list > .splide__slide.is-active {
  border: 3px solid #000;
}

.splide--nav > .splide__slider > .splide__track > .splide__list > .splide__slide:focus,
.splide--nav > .splide__track > .splide__list > .splide__slide:focus {
  outline: none;
}

.splide--rtl > .splide__arrows .splide__arrow--prev,
.splide--rtl > .splide__slider > .splide__track > .splide__arrows .splide__arrow--prev,
.splide--rtl > .splide__track > .splide__arrows .splide__arrow--prev {
  left: auto;
  right: 1em;
}

.splide--rtl > .splide__arrows .splide__arrow--prev svg,
.splide--rtl > .splide__slider > .splide__track > .splide__arrows .splide__arrow--prev svg,
.splide--rtl > .splide__track > .splide__arrows .splide__arrow--prev svg {
  transform: scaleX(1);
}

.splide--rtl > .splide__arrows .splide__arrow--next,
.splide--rtl > .splide__slider > .splide__track > .splide__arrows .splide__arrow--next,
.splide--rtl > .splide__track > .splide__arrows .splide__arrow--next {
  left: 1em;
  right: auto;
}

.splide--rtl > .splide__arrows .splide__arrow--next svg,
.splide--rtl > .splide__slider > .splide__track > .splide__arrows .splide__arrow--next svg,
.splide--rtl > .splide__track > .splide__arrows .splide__arrow--next svg {
  transform: scaleX(-1);
}

.splide--ttb > .splide__arrows .splide__arrow,
.splide--ttb > .splide__slider > .splide__track > .splide__arrows .splide__arrow,
.splide--ttb > .splide__track > .splide__arrows .splide__arrow {
  left: 50%;
  transform: translate(-50%);
}

.splide--ttb > .splide__arrows .splide__arrow--prev,
.splide--ttb > .splide__slider > .splide__track > .splide__arrows .splide__arrow--prev,
.splide--ttb > .splide__track > .splide__arrows .splide__arrow--prev {
  top: 1em;
}

.splide--ttb > .splide__arrows .splide__arrow--prev svg,
.splide--ttb > .splide__slider > .splide__track > .splide__arrows .splide__arrow--prev svg,
.splide--ttb > .splide__track > .splide__arrows .splide__arrow--prev svg {
  transform: rotate(-90deg);
}

.splide--ttb > .splide__arrows .splide__arrow--next,
.splide--ttb > .splide__slider > .splide__track > .splide__arrows .splide__arrow--next,
.splide--ttb > .splide__track > .splide__arrows .splide__arrow--next {
  bottom: 1em;
  top: auto;
}

.splide--ttb > .splide__arrows .splide__arrow--next svg,
.splide--ttb > .splide__slider > .splide__track > .splide__arrows .splide__arrow--next svg,
.splide--ttb > .splide__track > .splide__arrows .splide__arrow--next svg {
  transform: rotate(90deg);
}

.splide--ttb > .splide__pagination,
.splide--ttb > .splide__slider > .splide__pagination {
  bottom: 0;
  display: flex;
  flex-direction: column;
  left: auto;
  padding: 1em 0;
  right: .5em;
  top: 0;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  -webkit-tap-highlight-color: transparent;
}

html {
  font-size: 62.5%;
}

body {
  min-width: 36rem;
  font-family: "Raleway", "Arial", sans-serif;
  font-size: 1.6rem;
  color: #000;
  line-height: 1.1;
}

address {
  font-style: normal;
}

img {
  height: auto;
  max-width: 100%;
}

label {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

textarea {
  resize: vertical;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

input {
  border-radius: 0;
}

input[type="search"] {
  -webkit-appearance: none;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

:focus::-moz-placeholder {
  color: transparent;
}

:focus::placeholder {
  color: transparent;
}

.container {
  margin-left: auto;
  margin-right: auto;
  padding: 0 2rem;
  max-width: 170rem;
  width: 100%;
}

.site-wrap {
  display: flex;
  flex-direction: column;
  min-height: calc(var(--vh, 1vh) * 100);
}

.site-content {
  display: flex;
  flex-direction: column;
  flex: 1 0 auto;
}

.section {
  margin-bottom: 8rem;
}

.visually-hidden {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
}

.btn {
  display: inline-block;
  padding: 1.9rem 5rem;
  color: #fff;
  font-size: 1.6rem;
  line-height: 1;
  font-weight: 700;
  text-decoration: none;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  line-height: 2rem;
  background-color: #60BF00;
  border-radius: .6rem;
  text-align: center;
  border: 1px solid #60BF00;
  outline: none;
}

.form__checkbox._error .form__checkbox-text::before {
  border-color: red;
}

.form__checkbox-input {
  display: none;
}

.form__checkbox-input:checked + .form__checkbox-text::before {
  background-image: url("../assets/img/mark.svg");
  background-size: 1rem 1rem;
  background-position: top right;
  background-repeat: no-repeat;
}

.form__checkbox-text::before {
  content: '';
  display: inline-block;
  width: 1.5rem;
  height: 1.5rem;
  border: 1px solid #ADADAD;
  border-radius: 2px;
  margin-right: 2rem;
  vertical-align: bottom;
}

.form__item {
  margin-bottom: 1.5rem;
}

.form__item:last-child {
  margin-bottom: 0;
}

.form__item._error .form__text-input {
  border-color: red !important;
  color: red;
}

.form__item._error .form__text-input::-moz-placeholder {
  color: red;
}

.form__item._error .form__text-input::placeholder {
  color: red;
}

.form__text-input {
  padding: 1.4rem;
  font-size: 1.4rem;
  line-height: 1;
  border: 1px solid #BBBBBB;
  border-radius: 3px;
  width: 100%;
  resize: none;
}

.form__text-input::-moz-placeholder {
  color: #9A9A9A;
}

.form__text-input::placeholder {
  color: #9A9A9A;
}

.form__policy {
  font-size: 1.2rem;
  line-height: 1.6rem;
}

.form__policy .form__checkbox-text {
  display: flex;
}

.form__policy .form__checkbox-text::before {
  margin-top: .2rem;
  margin-right: 1rem;
  flex-shrink: 0;
}

.form._grey .form__text-input {
  background-color: #ECECEC;
  border-color: #ECECEC;
}

.popup {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  max-height: calc(var(--vh, 1vh) * 100 - 4rem);
  padding: 3.6rem 2rem;
  z-index: 1500;
  background-color: #fff;
  overflow: auto;
  width: calc(100% - 4rem);
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);
  border-radius: 9px;
}

.popup._active {
  display: block;
}

.popup__close-btn {
  padding: 0;
  border: none;
  background-color: transparent;
  outline: none;
  cursor: pointer;
  position: absolute;
  top: .6rem;
  right: 0.8rem;
  width: 2.6rem;
  height: 2.6rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.popup__close-btn svg {
  width: 1.4rem;
  height: 1.4rem;
  stroke: #4F4F4F;
}

.splide__arrow {
  width: 5rem;
  height: 5rem;
  background-color: #fff;
}

.splide__arrow--prev {
  left: -7.2rem;
}

.splide__arrow--next {
  right: -7.2rem;
}

.splide__arrow svg {
  width: 3rem;
  height: 3rem;
  fill: #60BF00;
}

.splide__pagination {
  bottom: 5rem;
}

.splide__pagination__page {
  position: relative;
  background-color: #fff;
  margin: 0;
  width: 2.4rem;
  height: 2.4rem;
  background-color: transparent;
  opacity: 1;
}

.splide__pagination__page::before,
.splide__pagination__page::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

.splide__pagination__page::before {
  width: 1rem;
  height: 1rem;
  background-color: #fff;
}

.splide__pagination__page::after {
  width: 5px;
  height: 5px;
  background-color: #142330;
  display: none;
}

.splide__pagination__page.is-active {
  background-color: transparent;
  opacity: 1;
}

.splide__pagination__page.is-active::before {
  width: 1.6rem;
  height: 1.6rem;
  background-color: #60BF00;
}

.splide__pagination__page.is-active::after {
  display: block;
}

.title {
  margin: 0;
  font-weight: 600;
  font-size: 3.2rem;
  line-height: 3.8rem;
  color: #252525;
  letter-spacing: 0.05em;
}

.title._centered {
  text-align: center;
}

.banner {
  background-image: url("../assets/img/banner-bg.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  background-color: #12528D;
}

.banner__inner {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 41rem;
  padding: 4rem 0;
}

.banner__title {
  margin-bottom: 4rem;
  font-weight: 600;
  font-size: 4.2rem;
  line-height: 4.9rem;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  color: #FFFFFF;
}

.fin-products {
  position: relative;
  margin-bottom: 12rem;
  padding: 12rem 0;
  background-color: #ECF2F8;
  overflow: hidden;
}

.fin-products::after {
  content: '';
  position: absolute;
  top: 50%;
  right: 0;
  height: 66rem;
  width: 75rem;
  transform: translate(50%, -50%);
  background-image: url("../assets/img/bg-logo.svg");
  background-repeat: no-repeat;
  background-position: contain;
  pointer-events: none;
}

.fin-products > * {
  position: relative;
  z-index: 1;
}

.fin-products__title {
  margin-bottom: 5rem;
}

.fin-products__list {
  display: flex;
  flex-wrap: wrap;
  margin-top: -2rem;
  margin-right: -2rem;
}

.fin-products__item {
  width: calc(100% / 3 - 2rem);
  margin-top: 2rem;
  margin-right: 2rem;
}

.fin-products__item-link {
  position: relative;
  display: flex;
  flex-direction: column;
  min-height: 16rem;
  padding-top: 2.5rem;
  padding-left: 3rem;
  padding-bottom: 2rem;
  padding-right: 8rem;
  background-color: #fff;
  text-decoration: none;
  color: #000;
  border-radius: .4rem;
  overflow: hidden;
}

.fin-products__item-link::after,
.fin-products__item-link::before {
  content: '';
  position: absolute;
  top: 0;
  height: 100%;
}

.fin-products__item-link::after {
  left: 0;
  width: 0.7rem;
  background-color: #60BF00;
}

.fin-products__item-link::before {
  right: 0;
  width: 8rem;
  background-color: #176FC0;
  opacity: 0;
}

.fin-products__item-title {
  margin: 0;
  margin-bottom: 2.4rem;
  font-weight: 500;
  font-size: 2.4rem;
  line-height: 2.8rem;
  letter-spacing: 0.03em;
}

.fin-products__go {
  margin-top: auto;
  color: #31B5FF;
  font-size: 1.4rem;
  line-height: 1.3;
  letter-spacing: 0.03em;
}

.fin-products__item-arrow {
  position: absolute;
  right: 2rem;
  bottom: 2rem;
  width: 4rem;
  height: 2.4rem;
  fill: #60BF00;
  opacity: 0;
  transition: opacity .3s;
}

.footer {
  color: #fff;
}

.footer__top {
  background-color: #0B2236;
  padding: 7rem 0;
}

.footer__top-inner {
  display: flex;
}

.footer__section {
  flex-grow: 1;
  width: 24%;
  min-width: 26rem;
  padding: 0 3rem;
  border-right: 1px solid rgba(255, 255, 255, 0.2);
}

.footer__section:first-child {
  padding-left: 0;
}

.footer__section:last-child {
  padding-right: 0;
  border: none;
}

.footer__section._logo {
  width: 22%;
}

.footer__section._address {
  width: 30%;
}

.footer__logo-link {
  display: inline-block;
  margin-bottom: 2.7rem;
  color: #fff;
}

.footer__logo-img {
  width: 20rem;
  height: 6.5rem;
}

.footer__company-name {
  margin: 0;
  text-transform: uppercase;
  line-height: 1.9rem;
}

.footer__section-title {
  margin: 0;
  margin-bottom: 1.3rem;
  padding-top: 1rem;
  color: #A1A1A1;
  font-size: 1.4rem;
  line-height: 1.6rem;
  font-weight: 400;
}

.footer__section-content {
  text-decoration: none;
  color: #fff;
  margin: 0;
  font-size: 2.4rem;
  line-height: 2.8rem;
}

.footer__bottom {
  padding: 2.3rem 0;
  background: #103250;
}

.footer__bottom-inner {
  display: flex;
  justify-content: space-between;
}

.footer__bottom-text {
  margin: 0;
  color: rgba(255, 255, 255, 0.7);
  font-size: 1.4rem;
  line-height: 1.6rem;
  text-decoration: none;
}

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  color: #fff;
}

.hero {
  min-height: calc(100 * var(--vh, 1vh));
  color: #fff;
  background-image: url("../assets/img/hero-bg/main.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
}

.hero__item {
  min-height: calc(100 * var(--vh, 1vh) - 5rem);
  padding-top: var(--header-height);
  padding-bottom: 10.8rem;
  display: flex;
  flex-direction: column;
}

.hero__title {
  margin: 0;
  margin-top: auto;
  margin-bottom: 2rem;
  max-width: 75.8rem;
  font-size: 6rem;
  line-height: 7rem;
  font-weight: 500;
}

.hero__bottom {
  margin-top: auto;
}

.hero__desc {
  max-width: 80rem;
  margin: 0;
  margin-bottom: 2rem;
  font-size: 2.4rem;
  line-height: 1.3;
  font-weight: 500;
}

.hero__order-btn {
  width: 20rem;
}

.mission__inner {
  display: flex;
}

.mission__title-wrap {
  flex-shrink: 0;
  margin-right: 7.4rem;
}

.mission__subtitle {
  margin: 0;
  margin-bottom: 1.5rem;
  padding-left: .5rem;
  font-weight: 400;
  font-size: 1.4rem;
  line-height: 1.3;
  color: #252525;
  border-left: 3px solid #60BF00;
}

.mission__list {
  display: flex;
  margin-right: -2rem;
}

.mission__item {
  position: relative;
  overflow: hidden;
  width: calc(100% / 3 - 2rem);
  margin-right: 2rem;
  padding: 3rem 2.8rem;
  padding-right: 2rem;
  background: #ECF2F8;
  border-radius: 4px;
}

.mission__item > * {
  position: relative;
  z-index: 1;
}

.mission__item::after {
  content: attr(data-order);
  position: absolute;
  bottom: 0;
  right: 0;
  transform: translateY(27%);
  color: #fff;
  font-size: 20rem;
  line-height: 1;
  letter-spacing: 0.05em;
  font-weight: 700;
}

.mission__item-title {
  position: relative;
  margin: 0;
  margin-bottom: 1.5rem;
  font-weight: 500;
  font-size: 2.4rem;
  line-height: 2.8rem;
  letter-spacing: 0.03em;
}

.mission__item-title::after {
  background: #12528D;
  content: '';
  position: absolute;
  left: -2.8rem;
  top: 50%;
  transform: translateY(-50%);
  height: calc(100% + 1rem);
  width: .3rem;
  border-radius: 0px 4px 4px 0px;
}

.mission__item-desc {
  isolation: isolate;
  margin: 0;
  font-size: 1.6rem;
  line-height: 1.4;
  letter-spacing: 0.03em;
  color: #383838;
}

.purchase-service {
  margin-bottom: 12rem;
}

.purchase-service__title {
  margin-bottom: 5rem;
}

.purchase-service__wrap {
  display: flex;
  flex-wrap: wrap;
  margin-top: -2rem;
  margin-right: -2rem;
}

.purchase-service__card {
  position: relative;
  width: calc(50% - 2rem);
  margin-right: 2rem;
  margin-top: 2rem;
  padding: 4rem;
  padding-bottom: 5.4rem;
  padding-right: 20rem;
  background-color: #F5F5F5;
  border-radius: 8px;
  overflow: hidden;
}

.purchase-service__card::after {
  content: '';
  position: absolute;
  right: 0;
  top: 0;
  width: 28rem;
  height: 100%;
  background-repeat: no-repeat;
  background-size: cover;
}

.purchase-service__card._customer::after {
  background-image: url("../assets/img/customer.png");
}

.purchase-service__card._participant::after {
  background-image: url("../assets/img/participant.png");
}

.purchase-service__card-title {
  margin: 0;
  margin-bottom: 3.6rem;
  font-size: 2.4rem;
  line-height: 2.8rem;
  font-weight: 500;
  letter-spacing: 0.03em;
  color: #142330;
}

.purchase-service__item {
  position: relative;
  margin-bottom: 2.4rem;
  padding-left: 1.8rem;
  font-size: 1.6rem;
  line-height: 2.2rem;
  letter-spacing: 0.03em;
  background-image: url("../assets/img/blue-checkmark.svg");
  background-repeat: no-repeat;
  background-position: top .4rem left 0;
}

.purchase-service__item:last-child {
  margin-bottom: 0;
}

._menu-open {
  overflow: hidden;
}

._menu-open .header__mobile-menu {
  top: var(--header-height, 6rem);
  transform: none;
}

._popup-open {
  position: relative;
  overflow: hidden;
}

._popup-open::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  background-color: rgba(0, 0, 0, 0.1);
  z-index: 1400;
}

._hide-mobile {
  display: none;
}

._loading::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1500;
  background-color: rgba(255, 255, 255, 0.5);
}

._loading::after {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 4.2rem;
  height: 4.2rem;
  content: '';
  background-image: url("../assets/img/spinner.svg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
}

@media only screen and (min-width: 768px) {
  .container {
    padding: 0 2.4rem;
  }

  .section {
    margin-bottom: 10rem;
  }

  .form__select {
    width: 28rem;
  }

  .popup {
    width: 60rem;
  }

  ._hide-mobile {
    display: block;
  }
}

@media only screen and (min-width: 1200px) {
  .container {
    padding: 0 10rem;
  }

  .section {
    margin-bottom: 13rem;
  }

  ._hide-desktop {
    display: none;
  }
}

@media only screen and (min-width: 1600px) {
  .container {
    padding: 0 12rem;
  }

  .splide__arrow--prev {
    left: -9rem;
  }

  .splide__arrow--next {
    right: -9rem;
  }
}

@media (hover: hover) {
  .btn:hover {
    background: #3E7B01;
    border-color: #60BF00;
  }

  .fin-products__item-link:hover {
    color: #fff;
    background-color: #12528D;
  }

  .fin-products__item-link:hover::after {
    opacity: 0;
  }

  .fin-products__item-link:hover::before {
    opacity: 1;
  }

  .fin-products__item-link:hover .fin-products__go {
    color: #fff;
  }

  .fin-products__item-link:hover .fin-products__item-arrow {
    opacity: 1;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
